// test-notifications-init.mjs - ‚úÖ Test endpoint sp√©cifique notifications
import axios from "axios";

const API_BASE = "https://app-dev.melyia.com/api";

async function loginAdmin() {
  try {
    console.log("üîë Connexion admin...");
    const response = await axios.post(`${API_BASE}/auth/login`, {
      email: "brice@melyia.com",
      password: "password",
    });

    if (response.data.success) {
      console.log("‚úÖ Connexion admin r√©ussie");
      return response.data.token;
    }
    throw new Error("Login failed");
  } catch (error) {
    console.error("‚ùå Erreur login:", error.response?.data || error.message);
    return null;
  }
}

async function initNotifications(token) {
  try {
    console.log("üîî Initialisation table notifications...");
    const response = await axios.post(
      `${API_BASE}/admin/init-notifications`,
      {},
      {
        headers: { Authorization: `Bearer ${token}` },
      }
    );

    if (response.data.success) {
      console.log("‚úÖ Table notifications cr√©√©e:", response.data.data);
      return response.data.data;
    }
    throw new Error("Init notifications failed");
  } catch (error) {
    console.error(
      "‚ùå Erreur init notifications:",
      error.response?.data || error.message
    );
    return null;
  }
}

async function runNotificationsInit() {
  console.log("üß™ TEST INITIALISATION NOTIFICATIONS");
  console.log("=====================================");

  const token = await loginAdmin();
  if (!token) {
    console.log("‚ùå √âCHEC: Impossible de se connecter");
    return;
  }

  const result = await initNotifications(token);
  if (!result) {
    console.log("‚ùå √âCHEC: Impossible d'initialiser les notifications");
    return;
  }

  console.log("\nüéâ SUCC√àS COMPLET!");
  console.log("‚úÖ Table notifications cr√©√©e et op√©rationnelle");
  console.log(`‚úÖ ${result.total_notifications} notifications en base`);
  console.log("‚úÖ Donn√©es de test ajout√©es");

  console.log("\nüìã Structure table notifications :");
  console.log("   ‚Ä¢ id (cl√© primaire auto-incr√©ment√©e)");
  console.log("   ‚Ä¢ user_id (destinataire - FK vers users)");
  console.log("   ‚Ä¢ sender_id (exp√©diteur - FK vers users)");
  console.log("   ‚Ä¢ notification_type (message, appointment, alert, etc.)");
  console.log("   ‚Ä¢ content (contenu de la notification)");
  console.log("   ‚Ä¢ link (lien de navigation)");
  console.log("   ‚Ä¢ priority (normal, high, urgent)");
  console.log("   ‚Ä¢ is_read (statut lecture)");
  console.log("   ‚Ä¢ read_at (timestamp de lecture)");
  console.log("   ‚Ä¢ created_at/updated_at (timestamps)");

  console.log("\nüéØ Pr√™t pour l'√©tape 2 :");
  console.log(
    "   ‚Ä¢ GET /api/notifications (r√©cup√©rer notifications utilisateur)"
  );
  console.log("   ‚Ä¢ POST /api/notifications (cr√©er notification)");
  console.log("   ‚Ä¢ PUT /api/notifications/:id/read (marquer comme lu)");
}

runNotificationsInit().catch(console.error);
